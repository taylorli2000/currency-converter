{"version":3,"sources":["components/CurrencyRow/CurrencyRow.js","components/App/App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","value","onChange","map","option","BASE_URL","App","fromAmount","toAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","conversion_rates","base_code","conversion_rate","e","target","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAEe,SAASA,EAAYC,GAClC,IACEC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,OACAC,EACEL,EADFK,eAEF,OACE,qCACE,uBAAOC,KAAK,SAASC,MAAOH,EAAQI,SAAUH,IAC9C,wBAAQE,MAAOL,EAAkBM,SAAUL,EAA3C,SACGF,EAAgBQ,KAAI,SAACC,GAAD,OACnB,wBAAqBH,MAAOG,EAA5B,SACGA,GADUA,WCXvB,IAAMC,EAAW,8DAyEFC,MAvEf,WACE,IAOIC,EAAYC,EAPhB,EAA8CC,mBAAS,IAAvD,mBAAOd,EAAP,KAAwBe,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOX,EAAP,KAAemB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KA2CA,OAxCID,GACFX,EAAaT,EACbU,EAAWV,EAASiB,GAAgB,IAEpCP,EAAWV,EACXS,EAAaT,EAASiB,GAAgB,GAGxCK,qBAAU,WACRC,MAAM,GAAD,OAAIhB,EAAJ,gBACFiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,kBAAkB,GACzDnB,EAAmB,YAAIiB,OAAOC,KAAKH,EAAKI,oBACxCjB,EAAgBa,EAAKK,WACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,iBAAiBH,SAEzC,IAEHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,YAAqCE,IACvCS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLT,EAAgBS,EAAKM,sBAG1B,CAACpB,EAAcE,IAahB,qCACE,yCACA,cAACpB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBe,EAClBd,iBAAkB,SAACmC,GAAD,OAAOpB,EAAgBoB,EAAEC,OAAOhC,QAClDF,eAjBN,SAAgCiC,GAC9Bf,EAAUe,EAAEC,OAAOhC,OACnBkB,GAAwB,IAgBpBrB,OAAQS,IAEV,qBAAK2B,GAAG,SAAR,eACA,cAACzC,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAACmC,GAAD,OAAOlB,EAAckB,EAAEC,OAAOhC,QAChDF,eApBN,SAA8BiC,GAC5Bf,EAAUe,EAAEC,OAAOhC,OACnBkB,GAAwB,IAmBpBrB,OAAQU,QCnEhB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2e4d45f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CurrencyRow(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    amount,\r\n    onChangeAmount,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <input type=\"number\" value={amount} onChange={onChangeAmount} />\r\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map((option) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"../CurrencyRow/CurrencyRow\";\n\nconst BASE_URL = \"https://v6.exchangerate-api.com/v6/7456d85866c195ddb1f81f18\";\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let fromAmount, toAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate || 0;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate || 0;\n  }\n\n  useEffect(() => {\n    fetch(`${BASE_URL}/latest/USD`)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstCurrency = Object.keys(data.conversion_rates)[0];\n        setCurrencyOptions([...Object.keys(data.conversion_rates)]);\n        setFromCurrency(data.base_code);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.conversion_rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}/pair/${fromCurrency}/${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => {\n          setExchangeRate(data.conversion_rate);\n        });\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <>\n      <h1>Convert</h1>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <div id=\"equals\">=</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={(e) => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}